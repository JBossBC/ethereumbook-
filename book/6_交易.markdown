# 交易

交易是由外部拥有账户 (EOA) 发起的签名消息，由以太坊网络传输，并记录在以太坊区块链上。这个基本定义隐藏了许多令人惊讶和迷人的细节。另一种看待交易的方式是，它们是唯一可以触发状态更改或导致合约在 EVM 中执行的事物。以太坊是一个全球单例状态机，而交易是使该状态机“滴答作响”并改变其状态的原因。**合约不会自行运行。**以太坊不会自主运行。一切都从交易开始。

在本章中，我们将剖析交易，展示它们如何工作，并检查细节。请注意，本章的大部分内容是针对那些有兴趣在低级别管理自己的交易的人，可能是因为他们正在编写钱包应用程序；如果您喜欢使用现有的钱包应用程序，则不必担心这一点，尽管您可能会发现这些细节很有趣！

## 交易的结构


首先让我们看一下交易的基本结构，因为它是在以太坊网络上序列化和传输的。客户端软件经常添加到交易中的其他元数据包括块号（一旦它被挖掘并包含在区块链中）和交易 ID（计算的哈希值）。每个接收到序列化事务的客户端和应用程序都将使用自己的内部数据结构将其存储在内存中，可能会使用网络序列化事务本身不存在的元数据进行修饰。网络序列化是交易的唯一标准形式。

事务是包含以下数据的序列化二进制消息：

### nonce

由原始 EOA 发布的序列号，用于防止消息重播

### gas price

发起人愿意为每单位气体支付的以太币数量（以 wei 为单位）

###


发起人愿意为此交易购买的最大 gas 量

### recipient

目标以太坊地址

### Value

发送到目的地的以太币数量（以 wei 为单位）


###  data

可变长度二进制数据有效载荷
 
### v,r,s

原始 EOA 的 ECDSA 数字签名的三个组成部分


交易消息的结构使用递归长度前缀 (RLP) 编码方案进行序列化，该方案专为以太坊中简单、字节完美的数据序列化而创建。以太坊中的所有数字都被编码为大端整数，长度是 8 位的倍数。
